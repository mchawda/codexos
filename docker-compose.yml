# SPDX-License-Identifier: LicenseRef-NIA-Proprietary
services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: codexos-postgres
    environment:
      POSTGRES_USER: codexos
      POSTGRES_PASSWORD: codexos_secure_password
      POSTGRES_DB: codexos_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U codexos"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and websockets
  redis:
    image: redis:7-alpine
    container_name: codexos-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ChromaDB for vector storage - temporarily disabled due to compatibility issues
  # chromadb:
  #   image: chromadb/chroma:0.4.15
  #   container_name: codexos-chromadb
  #   ports:
  #     - "8000:8000"
  #   command: ["chroma", "run", "--host", "0.0.0.0", "--port", "8000"]

  # FastAPI Backend
  backend:
    image: codexos-backend:latest
    container_name: codexos-backend
    environment:
      DATABASE_URL: postgresql+asyncpg://codexos:codexos_secure_password@postgres:5432/codexos_db
      REDIS_URL: redis://redis:6379/0
      WS_MESSAGE_QUEUE: redis://redis:6379/1
      SECRET_KEY: your-secret-key-change-in-production
      ENVIRONMENT: production
    ports:
      - "8001:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G
        reservations:
          cpus: "0.5"
          memory: 512M

  # Next.js Frontend
  frontend:
    image: codexos-frontend:latest
    container_name: codexos-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8001/api/v1
      NEXT_PUBLIC_WS_URL: ws://localhost:8001/ws
    ports:
      - "3000:3000"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:3000/api/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M

  # Ollama for local LLM (optional)
  ollama:
    image: ollama/ollama:latest
    container_name: codexos-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

volumes:
  postgres_data:
  redis_data:
  ollama_data:
